# rules https://prettier.io/docs/en/options.html
printWidth: 80 # number, 1行の最大文字数
tabWidth: 2 # インデントの文字数, number
useTabs: false # boolean, インデントを Tab 文字とする場合は true, スペースの場合は false
semi: true # boolean, セミコロンを矯正する
singleQuote: true # 文字列リテラルをシングルクォーテーションで統一する
endOfLine: lf # 改行コード
quoteProps: as-needed # オブジェクトリテラルのプロパティ名にクォーテーションを使うか 以下の値が使用可能
#   "as-needed" - 必要なときのみ
#   "consistent" - オブジェクト内に必要があるものが1つでもあれば、全部つける
#   "preserve" - ユーザーの入力を尊重する -> prettier は関与しない
jsxSingleQuote: false # React などで使用する JSX のタグの属性の値で、シングルクォーテーションを使用する
#   例えば <input type="text" /> の "text" を 'text' とするか、という意味
trailingComma: all # オブジェクトリテラルや配列の最後のカンマを強制するか 以下の値が使用可能
#   "es5" - ES5で有効な場合は末尾のコンマをつける。
#   "none" - 末尾のコンマはつけない
#   "all" - 必ずつける ES2017 以降で有効
bracketSpacing: true # boolean オブジェクトリテラルの {} 内でスペースを開けるか
#   true - 例: { foo: bar }
#   false - 例: {foo: bar}
bracketSameLine: false # 複数行になるHTMLタグ(JSX(React), Vue.js も対象))の閉じ'>'を別の行に置くか
#   true
#     <button
#       id="prettier-id"
#       onClick={this.handleClick}>
#       Click Here
#     </button>
#   false
#     <button
#       id="prettier-id"
#       onClick={this.handleClick}
#     >
#       Click Here
#     </button>
arrowParens: always # Arrow関数の引数が省略できる時でも省略しないか
#   "always" - 常に省略しない. 例: (x) => x
#   "avoid" - 可能な場合は省略する 例: x => x
rangeStart: 0 # ファイル内のフォーマットの対象範囲 開始行
# rangeEnd: infinity # ファイル内のフォーマットの対象範囲 終了行　指定しない場合は末尾まで全部
# parser: babylon # 特定の言語のみを対象とする場合に、ここに列記する
#   指定できる値 https://prettier.io/docs/en/options.html#parser
requirePragma: false # ソースコードの先頭に プラグマコメントを書くことで、Prettier の対象を制限することができる
insertPragma: false # Prettier でフォーマットした時に ソースコードの先頭に requirePragma で有効なプラグマコメントを追加する
proseWrap: preserve # markdown などの時に、改行するかどうか
htmlWhitespaceSensitivity: css # HTML 内の空白文字の取り扱い
vueIndentScriptAndStyle: false # Vue.js テンプレートの <script>, <style> タグ内にインデントを含むかどうか
embeddedLanguageFormatting: auto # Markdown のコードブロックなど、別なコードの埋め込みを判断して対象とするか
